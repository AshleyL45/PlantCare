{"ast":null,"code":"var _jsxFileName = \"/home/greta/Documents/www/PlantCare/front/src/components/landingPage/HouseplantsCarousel.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { fetchIndoorPlants } from \"../../services/productService\";\nimport { useNavigate } from \"react-router-dom\";\nimport ProductCarousel from \"../landingPage/carousels/ProductCarousel\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction HouseplantsCarousel() {\n  _s();\n  const [plantsData, setPlantsData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function loadPlants() {\n      try {\n        const data = await fetchIndoorPlants();\n        setPlantsData(data);\n      } catch (error) {\n        console.error(\"Erreur lors du chargement des plantes d'intérieur :\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    loadPlants();\n  }, []);\n  const indoorPlants = plantsData.map(plant => ({\n    id: plant.id,\n    image: plant.image || \"https://via.placeholder.com/250\",\n    // ✅ Image par défaut si null\n    name: plant.name,\n    description: plant.description,\n    price: plant.price.toFixed(2) + \"€\"\n  }));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    style: {\n      position: \"relative\",\n      marginTop: \"40px\"\n    },\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Chargement des plantes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ProductCarousel, {\n        products: indoorPlants\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          right: \"3.5%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            cursor: \"pointer\",\n            color: \"#1976d2\",\n            fontWeight: \"bold\"\n          },\n          onClick: () => navigate(\"/products?filter=indoor\"),\n          children: \"Voir plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(HouseplantsCarousel, \"DmoFfYNKij3MWHVl0O/x8o/2TP0=\", false, function () {\n  return [useNavigate];\n});\n_c = HouseplantsCarousel;\nexport default HouseplantsCarousel;\nvar _c;\n$RefreshReg$(_c, \"HouseplantsCarousel\");","map":{"version":3,"names":["useEffect","useState","fetchIndoorPlants","useNavigate","ProductCarousel","jsxDEV","_jsxDEV","Fragment","_Fragment","HouseplantsCarousel","_s","plantsData","setPlantsData","isLoading","setIsLoading","navigate","loadPlants","data","error","console","indoorPlants","map","plant","id","image","name","description","price","toFixed","style","position","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","products","right","cursor","color","fontWeight","onClick","_c","$RefreshReg$"],"sources":["/home/greta/Documents/www/PlantCare/front/src/components/landingPage/HouseplantsCarousel.tsx"],"sourcesContent":["import {useEffect, useState} from \"react\";\nimport {fetchIndoorPlants} from \"../../services/productService\";\nimport {useNavigate} from \"react-router-dom\";\nimport ProductCarousel from \"../landingPage/carousels/ProductCarousel\";\n\n\ntype Plant = {\n    id: number;\n    name: string;\n    image: string;\n    description: string;\n    price: number;\n};\n\nfunction HouseplantsCarousel() {\n    const [plantsData, setPlantsData] = useState<Plant[]>([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        async function loadPlants() {\n            try {\n                const data = await fetchIndoorPlants();\n                setPlantsData(data);\n            } catch (error) {\n                console.error(\"Erreur lors du chargement des plantes d'intérieur :\", error);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n\n        loadPlants();\n    }, []);\n\n    const indoorPlants = plantsData.map((plant) => ({\n        id: plant.id,\n        image: plant.image || \"https://via.placeholder.com/250\", // ✅ Image par défaut si null\n        name: plant.name,\n        description: plant.description,\n        price: plant.price.toFixed(2) + \"€\",\n    }));\n\n    return (\n        <section style={{position: \"relative\", marginTop: \"40px\"}}>\n            {/* Empêche le rendu du carousel tant que les données ne sont pas chargées */}\n            {isLoading ? (\n                <p>Chargement des plantes...</p>\n            ) : (\n                <>\n                    {/* Carousel intact avec les nouvelles données */}\n                    <ProductCarousel products={indoorPlants}/>\n\n                    {/* Lien \"Voir plus\" qui redirige avec le filtre \"Plantes d'intérieur\" activé */}\n                    <div style={{position: \"absolute\", right: \"3.5%\"}}>\n                        <span\n                            style={{cursor: \"pointer\", color: \"#1976d2\", fontWeight: \"bold\"}}\n                            onClick={() => navigate(\"/products?filter=indoor\")}\n                        >\n                            Voir plus\n                        </span>\n                    </div>\n                </>\n            )}\n        </section>\n    );\n}\n\nexport default HouseplantsCarousel;\n"],"mappings":";;AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,SAAQC,iBAAiB,QAAO,+BAA+B;AAC/D,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,OAAOC,eAAe,MAAM,0CAA0C;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAWvE,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAU,EAAE,CAAC;EACzD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMc,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACZ,eAAegB,UAAUA,CAAA,EAAG;MACxB,IAAI;QACA,MAAMC,IAAI,GAAG,MAAMf,iBAAiB,CAAC,CAAC;QACtCU,aAAa,CAACK,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,qDAAqD,EAAEA,KAAK,CAAC;MAC/E,CAAC,SAAS;QACNJ,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ;IAEAE,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,YAAY,GAAGT,UAAU,CAACU,GAAG,CAAEC,KAAK,KAAM;IAC5CC,EAAE,EAAED,KAAK,CAACC,EAAE;IACZC,KAAK,EAAEF,KAAK,CAACE,KAAK,IAAI,iCAAiC;IAAE;IACzDC,IAAI,EAAEH,KAAK,CAACG,IAAI;IAChBC,WAAW,EAAEJ,KAAK,CAACI,WAAW;IAC9BC,KAAK,EAAEL,KAAK,CAACK,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,GAAG;EACpC,CAAC,CAAC,CAAC;EAEH,oBACItB,OAAA;IAASuB,KAAK,EAAE;MAACC,QAAQ,EAAE,UAAU;MAAEC,SAAS,EAAE;IAAM,CAAE;IAAAC,QAAA,EAErDnB,SAAS,gBACNP,OAAA;MAAA0B,QAAA,EAAG;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEhC9B,OAAA,CAAAE,SAAA;MAAAwB,QAAA,gBAEI1B,OAAA,CAACF,eAAe;QAACiC,QAAQ,EAAEjB;MAAa;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAG1C9B,OAAA;QAAKuB,KAAK,EAAE;UAACC,QAAQ,EAAE,UAAU;UAAEQ,KAAK,EAAE;QAAM,CAAE;QAAAN,QAAA,eAC9C1B,OAAA;UACIuB,KAAK,EAAE;YAACU,MAAM,EAAE,SAAS;YAAEC,KAAK,EAAE,SAAS;YAAEC,UAAU,EAAE;UAAM,CAAE;UACjEC,OAAO,EAAEA,CAAA,KAAM3B,QAAQ,CAAC,yBAAyB,CAAE;UAAAiB,QAAA,EACtD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA,eACR;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAElB;AAAC1B,EAAA,CAnDQD,mBAAmB;EAAA,QAGPN,WAAW;AAAA;AAAAwC,EAAA,GAHvBlC,mBAAmB;AAqD5B,eAAeA,mBAAmB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}