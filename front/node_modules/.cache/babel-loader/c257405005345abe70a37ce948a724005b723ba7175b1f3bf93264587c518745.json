{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\n/**\n * Hook personnalisé pour rechercher des produits.\n * @param query Chaîne de recherche.\n * @param debounceTime Délai (en ms) pour le debounce.\n * @returns Un objet contenant les suggestions et l'état d'affichage du dropdown.\n */\nconst useProductSearch = (query, debounceTime = 300) => {\n  _s();\n  const [suggestions, setSuggestions] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const typingTimeoutRef = useRef(null);\n  useEffect(() => {\n    if (query.length >= 3) {\n      // Annuler le timer précédent si présent\n      if (typingTimeoutRef.current) clearTimeout(typingTimeoutRef.current);\n\n      // Démarrer un nouveau timer pour le debounce\n      typingTimeoutRef.current = setTimeout(async () => {\n        try {\n          const response = await axios.get(`http://localhost:8080/product/search?keyword=${encodeURIComponent(query)}`);\n          if (response.data && response.data.length > 0) {\n            setSuggestions(response.data);\n            setShowDropdown(true);\n          } else {\n            setSuggestions([]);\n            setShowDropdown(false);\n          }\n        } catch (error) {\n          console.error(\"Erreur lors de la récupération des produits :\", error);\n          setSuggestions([]);\n          setShowDropdown(false);\n        }\n      }, debounceTime);\n    } else {\n      setSuggestions([]);\n      setShowDropdown(false);\n    }\n  }, [query, debounceTime]);\n  return {\n    suggestions,\n    showDropdown\n  };\n};\n_s(useProductSearch, \"W3O4uoNJpZvk7HATLaVvQnJgxuE=\");\nexport default useProductSearch;","map":{"version":3,"names":["useState","useEffect","useRef","axios","useProductSearch","query","debounceTime","_s","suggestions","setSuggestions","showDropdown","setShowDropdown","typingTimeoutRef","length","current","clearTimeout","setTimeout","response","get","encodeURIComponent","data","error","console"],"sources":["/home/greta/Documents/www/PlantCare/front/src/components/header/useProductSearch.tsx"],"sourcesContent":["\nimport {useState, useEffect, useRef} from \"react\";\nimport axios from \"axios\";\n\nexport interface Product {\n    id: number;\n    name: string;\n    image: string;\n}\n\n/**\n * Hook personnalisé pour rechercher des produits.\n * @param query Chaîne de recherche.\n * @param debounceTime Délai (en ms) pour le debounce.\n * @returns Un objet contenant les suggestions et l'état d'affichage du dropdown.\n */\nconst useProductSearch = (query: string, debounceTime: number = 300) => {\n    const [suggestions, setSuggestions] = useState<Product[]>([]);\n    const [showDropdown, setShowDropdown] = useState(false);\n    const typingTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n    useEffect(() => {\n        if (query.length >= 3) {\n            // Annuler le timer précédent si présent\n            if (typingTimeoutRef.current) clearTimeout(typingTimeoutRef.current);\n\n            // Démarrer un nouveau timer pour le debounce\n            typingTimeoutRef.current = setTimeout(async () => {\n                try {\n                    const response = await axios.get(\n                        `http://localhost:8080/product/search?keyword=${encodeURIComponent(query)}`\n                    );\n                    if (response.data && response.data.length > 0) {\n                        setSuggestions(response.data);\n                        setShowDropdown(true);\n                    } else {\n                        setSuggestions([]);\n                        setShowDropdown(false);\n                    }\n                } catch (error) {\n                    console.error(\"Erreur lors de la récupération des produits :\", error);\n                    setSuggestions([]);\n                    setShowDropdown(false);\n                }\n            }, debounceTime);\n        } else {\n            setSuggestions([]);\n            setShowDropdown(false);\n        }\n    }, [query, debounceTime]);\n\n    return {suggestions, showDropdown};\n};\n\nexport default useProductSearch;\n"],"mappings":";AACA,SAAQA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAO,OAAO;AACjD,OAAOC,KAAK,MAAM,OAAO;AAQzB;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,GAAGA,CAACC,KAAa,EAAEC,YAAoB,GAAG,GAAG,KAAK;EAAAC,EAAA;EACpE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAY,EAAE,CAAC;EAC7D,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMY,gBAAgB,GAAGV,MAAM,CAAwB,IAAI,CAAC;EAE5DD,SAAS,CAAC,MAAM;IACZ,IAAII,KAAK,CAACQ,MAAM,IAAI,CAAC,EAAE;MACnB;MACA,IAAID,gBAAgB,CAACE,OAAO,EAAEC,YAAY,CAACH,gBAAgB,CAACE,OAAO,CAAC;;MAEpE;MACAF,gBAAgB,CAACE,OAAO,GAAGE,UAAU,CAAC,YAAY;QAC9C,IAAI;UACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAC5B,gDAAgDC,kBAAkB,CAACd,KAAK,CAAC,EAC7E,CAAC;UACD,IAAIY,QAAQ,CAACG,IAAI,IAAIH,QAAQ,CAACG,IAAI,CAACP,MAAM,GAAG,CAAC,EAAE;YAC3CJ,cAAc,CAACQ,QAAQ,CAACG,IAAI,CAAC;YAC7BT,eAAe,CAAC,IAAI,CAAC;UACzB,CAAC,MAAM;YACHF,cAAc,CAAC,EAAE,CAAC;YAClBE,eAAe,CAAC,KAAK,CAAC;UAC1B;QACJ,CAAC,CAAC,OAAOU,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;UACrEZ,cAAc,CAAC,EAAE,CAAC;UAClBE,eAAe,CAAC,KAAK,CAAC;QAC1B;MACJ,CAAC,EAAEL,YAAY,CAAC;IACpB,CAAC,MAAM;MACHG,cAAc,CAAC,EAAE,CAAC;MAClBE,eAAe,CAAC,KAAK,CAAC;IAC1B;EACJ,CAAC,EAAE,CAACN,KAAK,EAAEC,YAAY,CAAC,CAAC;EAEzB,OAAO;IAACE,WAAW;IAAEE;EAAY,CAAC;AACtC,CAAC;AAACH,EAAA,CApCIH,gBAAgB;AAsCtB,eAAeA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}