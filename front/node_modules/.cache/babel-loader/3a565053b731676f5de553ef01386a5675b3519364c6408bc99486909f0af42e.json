{"ast":null,"code":"// Fonction pour récupérer toutes les plantes\nexport async function fetchProducts() {\n  try {\n    const response = await fetch(\"http://localhost:8080/product\");\n    if (!response.ok) {\n      throw new Error(\"Erreur lors de la récupération des produits\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Erreur API :\", error);\n    return [];\n  }\n}\n\n// Fonction pour récupérer uniquement les plantes d'intérieur\nexport async function fetchIndoorPlants() {\n  try {\n    const response = await fetch(\"http://localhost:8080/product/category/indoor plant\");\n    if (!response.ok) {\n      throw new Error(\"Erreur lors de la récupération des plantes d'intérieur\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Erreur API :\", error);\n    return [];\n  }\n}\n\n// Fonction pour récupérer uniquement les plantes faciles d'entretien\nexport async function fetchEasyCarePlants() {\n  try {\n    const response = await fetch(\"http://localhost:8080/product/category/easycare plant\");\n    if (!response.ok) {\n      throw new Error(\"Erreur lors de la récupération des plantes faciles d'entretien\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Erreur API :\", error);\n    return [];\n  }\n}\n\n// Fonction pour récupérer uniquement les plantes d'extérieur\nexport async function fetchOutdoorPlants() {\n  try {\n    const response = await fetch(\"http://localhost:8080/product/category/outdoor plant\");\n    if (!response.ok) {\n      throw new Error(\"Erreur lors de la récupération des plantes d'extérieur\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Erreur API :\", error);\n    return [];\n  }\n}\n\n// Fonction pour récupérer un produit spécifique en fonction de son id\nexport async function fetchProductById(productId) {\n  try {\n    const response = await fetch(`http://localhost:8080/product/${productId}`);\n    if (!response.ok) {\n      throw new Error(\"Erreur lors de la récupération du produit\");\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"Erreur API :\", error);\n    return null;\n  }\n}","map":{"version":3,"names":["fetchProducts","response","fetch","ok","Error","json","error","console","fetchIndoorPlants","fetchEasyCarePlants","fetchOutdoorPlants","fetchProductById","productId"],"sources":["/home/greta/Documents/www/PlantCare/front/src/services/productService.tsx"],"sourcesContent":["// Fonction pour récupérer toutes les plantes\nexport async function fetchProducts() {\n    try {\n        const response = await fetch(\"http://localhost:8080/product\");\n        if (!response.ok) {\n            throw new Error(\"Erreur lors de la récupération des produits\");\n        }\n        return await response.json();\n    } catch (error) {\n        console.error(\"Erreur API :\", error);\n        return [];\n    }\n}\n\n// Fonction pour récupérer uniquement les plantes d'intérieur\nexport async function fetchIndoorPlants() {\n    try {\n        const response = await fetch(\"http://localhost:8080/product/category/indoor plant\");\n        if (!response.ok) {\n            throw new Error(\"Erreur lors de la récupération des plantes d'intérieur\");\n        }\n        return await response.json();\n    } catch (error) {\n        console.error(\"Erreur API :\", error);\n        return [];\n    }\n}\n\n// Fonction pour récupérer uniquement les plantes faciles d'entretien\nexport async function fetchEasyCarePlants() {\n    try {\n        const response = await fetch(\"http://localhost:8080/product/category/easycare plant\");\n        if (!response.ok) {\n            throw new Error(\"Erreur lors de la récupération des plantes faciles d'entretien\");\n        }\n        return await response.json();\n    } catch (error) {\n        console.error(\"Erreur API :\", error);\n        return [];\n    }\n}\n\n// Fonction pour récupérer uniquement les plantes d'extérieur\nexport async function fetchOutdoorPlants() {\n    try {\n        const response = await fetch(\"http://localhost:8080/product/category/outdoor plant\");\n        if (!response.ok) {\n            throw new Error(\"Erreur lors de la récupération des plantes d'extérieur\");\n        }\n        return await response.json();\n    } catch (error) {\n        console.error(\"Erreur API :\", error);\n        return [];\n    }\n}\n\n// Fonction pour récupérer un produit spécifique en fonction de son id\nexport async function fetchProductById(productId: number) {\n    try {\n        const response = await fetch(`http://localhost:8080/product/${productId}`);\n        if (!response.ok) {\n            throw new Error(\"Erreur lors de la récupération du produit\");\n        }\n        return await response.json();\n    } catch (error) {\n        console.error(\"Erreur API :\", error);\n        return null;\n    }\n}\n\n\n\n"],"mappings":"AAAA;AACA,OAAO,eAAeA,aAAaA,CAAA,EAAG;EAClC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;IAC7D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;IAClE;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,OAAO,EAAE;EACb;AACJ;;AAEA;AACA,OAAO,eAAeE,iBAAiBA,CAAA,EAAG;EACtC,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,qDAAqD,CAAC;IACnF,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,wDAAwD,CAAC;IAC7E;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,OAAO,EAAE;EACb;AACJ;;AAEA;AACA,OAAO,eAAeG,mBAAmBA,CAAA,EAAG;EACxC,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,uDAAuD,CAAC;IACrF,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,gEAAgE,CAAC;IACrF;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,OAAO,EAAE;EACb;AACJ;;AAEA;AACA,OAAO,eAAeI,kBAAkBA,CAAA,EAAG;EACvC,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,sDAAsD,CAAC;IACpF,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,wDAAwD,CAAC;IAC7E;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,OAAO,EAAE;EACb;AACJ;;AAEA;AACA,OAAO,eAAeK,gBAAgBA,CAACC,SAAiB,EAAE;EACtD,IAAI;IACA,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiCU,SAAS,EAAE,CAAC;IAC1E,IAAI,CAACX,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,2CAA2C,CAAC;IAChE;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,OAAO,IAAI;EACf;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}