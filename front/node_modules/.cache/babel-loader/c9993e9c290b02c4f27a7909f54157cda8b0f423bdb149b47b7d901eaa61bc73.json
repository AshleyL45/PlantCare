{"ast":null,"code":"var _jsxFileName = \"/home/greta/Documents/www/PlantCare/front/src/pages/B_body/AllProducts.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport plantsData from \"../../dataFake/plant_collection_updated.json\";\nimport GenericButton from \"../../components/GenericButton\";\nimport ProductGrid from \"../../components/allProductsPage/GridProduct\";\nimport FilterProduct from \"../../components/allProductsPage/FilterProduct\";\nimport { useLocation } from \"react-router-dom\";\n\n// Interface des produits\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllProducts = () => {\n  _s();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const filterParam = params.get(\"filter\");\n  const [filters, setFilters] = useState({\n    indoor: false,\n    outdoor: false,\n    easycare: false\n  });\n  const [visibleCount, setVisibleCount] = useState(18);\n  useEffect(() => {\n    if (filterParam === \"indoor\") {\n      setFilters({\n        indoor: true,\n        outdoor: false,\n        easycare: false\n      });\n    } else if (filterParam === \"outdoor\") {\n      setFilters({\n        indoor: false,\n        outdoor: true,\n        easycare: false\n      });\n    } else if (filterParam === \"easycare\") {\n      setFilters({\n        indoor: false,\n        outdoor: false,\n        easycare: true\n      });\n    }\n  }, [filterParam]);\n  const handleFilterChange = (name, checked) => {\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      [name]: checked\n    }));\n  };\n  const filteredPlants = plantsData.filter(plant => {\n    if (filters.indoor && plant.category === \"indoor plant\") return true;\n    if (filters.outdoor && plant.category === \"outdoor plant\") return true;\n    if (filters.easycare && plant.category === \"easycare plant\") return true;\n    return false;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Toutes nos plantes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"D\\xE9couvrez toutes nos vari\\xE9t\\xE9s de plantes adapt\\xE9es \\xE0 vos besoins.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FilterProduct, {\n      filters: filters,\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProductGrid, {\n      products: filteredPlants.slice(0, visibleCount).map(plant => ({\n        id: plant.id,\n        image: plant.image || \"https://via.placeholder.com/250\",\n        // ✅ Remplace null par une image par défaut\n        name: plant.name,\n        price: plant.price // ✅ `price` reste un `number`\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), filteredPlants.length > 18 && /*#__PURE__*/_jsxDEV(GenericButton, {\n      label: \"Voir plus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 44\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(AllProducts, \"2KV5ADbrdg8F75xUSEThHrRSrH8=\", false, function () {\n  return [useLocation];\n});\n_c = AllProducts;\nexport default AllProducts;\nvar _c;\n$RefreshReg$(_c, \"AllProducts\");","map":{"version":3,"names":["React","useEffect","useState","plantsData","GenericButton","ProductGrid","FilterProduct","useLocation","jsxDEV","_jsxDEV","AllProducts","_s","location","params","URLSearchParams","search","filterParam","get","filters","setFilters","indoor","outdoor","easycare","visibleCount","setVisibleCount","handleFilterChange","name","checked","prevFilters","filteredPlants","filter","plant","category","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilterChange","products","slice","map","id","image","price","length","label","_c","$RefreshReg$"],"sources":["/home/greta/Documents/www/PlantCare/front/src/pages/B_body/AllProducts.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport plantsData from \"../../dataFake/plant_collection_updated.json\";\nimport GenericButton from \"../../components/GenericButton\";\nimport ProductGrid from \"../../components/allProductsPage/GridProduct\";\nimport FilterProduct from \"../../components/allProductsPage/FilterProduct\";\nimport {useLocation} from \"react-router-dom\";\n\n// Interface des produits\ninterface Plant {\n    id: number;\n    name: string;\n    latin_name: string;\n    description: string;\n    quantity: number;\n    care_type: string[];\n    category: \"indoor plant\" | \"easycare plant\" | \"outdoor plant\";\n    rating: number;\n    size: string;\n    pet_friendly: boolean;\n    image: string;\n    price: number; // ✅ Correction : price est maintenant un number\n}\n\n\n\nconst AllProducts: React.FC = () => {\n    const location = useLocation();\n    const params = new URLSearchParams(location.search);\n    const filterParam = params.get(\"filter\");\n\n    const [filters, setFilters] = useState({\n        indoor: false,\n        outdoor: false,\n        easycare: false,\n    });\n\n    const [visibleCount, setVisibleCount] = useState(18);\n\n    useEffect(() => {\n        if (filterParam === \"indoor\") {\n            setFilters({indoor: true, outdoor: false, easycare: false});\n        } else if (filterParam === \"outdoor\") {\n            setFilters({indoor: false, outdoor: true, easycare: false});\n        } else if (filterParam === \"easycare\") {\n            setFilters({indoor: false, outdoor: false, easycare: true});\n        }\n    }, [filterParam]);\n\n    const handleFilterChange = (name: string, checked: boolean) => {\n        setFilters((prevFilters) => ({\n            ...prevFilters,\n            [name]: checked,\n        }));\n    };\n\n    const filteredPlants = plantsData.filter((plant) => {\n        if (filters.indoor && plant.category === \"indoor plant\") return true;\n        if (filters.outdoor && plant.category === \"outdoor plant\") return true;\n        if (filters.easycare && plant.category === \"easycare plant\") return true;\n        return false;\n    });\n\n    return (\n        <div style={{padding: \"20px\", textAlign: \"center\"}}>\n            <h1>Toutes nos plantes</h1>\n            <p>Découvrez toutes nos variétés de plantes adaptées à vos besoins.</p>\n\n            {/* Filtres */}\n            <FilterProduct filters={filters} onFilterChange={handleFilterChange}/>\n\n            {/* Grille d'affichage des produits */}\n            <ProductGrid\n                products={filteredPlants.slice(0, visibleCount).map((plant) => ({\n                    id: plant.id,\n                    image: plant.image || \"https://via.placeholder.com/250\", // ✅ Remplace null par une image par défaut\n                    name: plant.name,\n                    price: plant.price, // ✅ `price` reste un `number`\n                }))}\n            />\n\n            {/* Bouton \"Voir plus\" pour charger plus de produits */}\n            {filteredPlants.length > 18 && <GenericButton label=\"Voir plus\"/>}\n        </div>\n    );\n};\n\nexport default AllProducts;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}