{"ast":null,"code":"var _jsxFileName = \"/home/greta/Documents/www/PlantCare/front/src/pages/B_body/AllProducts.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { fetchProducts } from \"../../services/productService\";\nimport \"../styles/AllProducts.css\";\nimport GridProduct from \"../../components/allProductsPage/GridProduct\";\n\n// ðŸ”¥ DÃ©finition du type Product pour TypeScript\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AllProducts() {\n  _s();\n  // ðŸ”¥ On indique que `products` et `filteredProducts` sont des tableaux de `Product`\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  useEffect(() => {\n    async function loadProducts() {\n      try {\n        const data = await fetchProducts(); // ðŸ”¥ On force TypeScript Ã  comprendre que `data` est un tableau de `Product`\n        setProducts(data);\n        setFilteredProducts(data);\n      } catch (error) {\n        console.error(\"Erreur lors du chargement des produits :\", error);\n      }\n    }\n    loadProducts();\n  }, []);\n  useEffect(() => {\n    let filtered = products;\n    if (searchTerm) {\n      filtered = filtered.filter(product => product.name.toLowerCase().includes(searchTerm.toLowerCase()) || product.description.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n    if (selectedCategory) {\n      filtered = filtered.filter(product => product.category === selectedCategory);\n    }\n    setFilteredProducts(filtered);\n  }, [searchTerm, selectedCategory, products]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-products\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Nos Plantes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Rechercher une plante...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      className: \"search-bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedCategory(e.target.value),\n        value: selectedCategory,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Toutes les cat\\xE9gories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"int\\xE9rieur\",\n          children: \"Plantes d'int\\xE9rieur\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ext\\xE9rieur\",\n          children: \"Plantes d'ext\\xE9rieur\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cactus\",\n          children: \"Cactus & Succulentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GridProduct, {\n      products: filteredProducts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(AllProducts, \"tgD8e0DBw7anV2UWQ2SMXe09C3o=\");\n_c = AllProducts;\nexport default AllProducts;\nvar _c;\n$RefreshReg$(_c, \"AllProducts\");","map":{"version":3,"names":["useEffect","useState","fetchProducts","GridProduct","jsxDEV","_jsxDEV","AllProducts","_s","products","setProducts","filteredProducts","setFilteredProducts","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","loadProducts","data","error","console","filtered","filter","product","name","toLowerCase","includes","description","category","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/greta/Documents/www/PlantCare/front/src/pages/B_body/AllProducts.tsx"],"sourcesContent":["import {useEffect, useState} from \"react\";\nimport {fetchProducts} from \"../../services/productService\";\nimport \"../styles/AllProducts.css\";\nimport GridProduct from \"../../components/allProductsPage/GridProduct\";\n\n// ðŸ”¥ DÃ©finition du type Product pour TypeScript\ntype Product = {\n    id: number;\n    name: string;\n    description: string;\n    category: string;\n    price: number;\n    image: string;\n};\n\nfunction AllProducts() {\n    // ðŸ”¥ On indique que `products` et `filteredProducts` sont des tableaux de `Product`\n    const [products, setProducts] = useState<Product[]>([]);\n    const [filteredProducts, setFilteredProducts] = useState<Product[]>([]);\n    const [searchTerm, setSearchTerm] = useState<string>(\"\");\n    const [selectedCategory, setSelectedCategory] = useState<string>(\"\");\n\n    useEffect(() => {\n        async function loadProducts() {\n            try {\n                const data: Product[] = await fetchProducts(); // ðŸ”¥ On force TypeScript Ã  comprendre que `data` est un tableau de `Product`\n                setProducts(data);\n                setFilteredProducts(data);\n            } catch (error) {\n                console.error(\"Erreur lors du chargement des produits :\", error);\n            }\n        }\n\n        loadProducts();\n    }, []);\n\n    useEffect(() => {\n        let filtered = products;\n\n        if (searchTerm) {\n            filtered = filtered.filter(product =>\n                product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                product.description.toLowerCase().includes(searchTerm.toLowerCase())\n            );\n        }\n\n        if (selectedCategory) {\n            filtered = filtered.filter(product => product.category === selectedCategory);\n        }\n\n        setFilteredProducts(filtered);\n    }, [searchTerm, selectedCategory, products]);\n\n    return (\n        <div className=\"all-products\">\n            <h2>Nos Plantes</h2>\n\n            <input\n                type=\"text\"\n                placeholder=\"Rechercher une plante...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"search-bar\"\n            />\n\n            <div className=\"filters\">\n                <select onChange={(e) => setSelectedCategory(e.target.value)} value={selectedCategory}>\n                    <option value=\"\">Toutes les catÃ©gories</option>\n                    <option value=\"intÃ©rieur\">Plantes d'intÃ©rieur</option>\n                    <option value=\"extÃ©rieur\">Plantes d'extÃ©rieur</option>\n                    <option value=\"cactus\">Cactus & Succulentes</option>\n                </select>\n            </div>\n\n            {/* Affichage des produits via GridProduct */}\n            <GridProduct products={filteredProducts}/>\n        </div>\n    );\n}\n\nexport default AllProducts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}