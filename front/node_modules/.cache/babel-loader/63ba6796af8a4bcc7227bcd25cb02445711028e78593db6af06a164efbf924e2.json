{"ast":null,"code":"var _jsxFileName = \"/home/greta/Documents/www/PlantCare/front/src/components/header/SearchBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport TextField from \"@mui/material/TextField\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Paper from \"@mui/material/Paper\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  _s();\n  // État pour stocker la chaîne de recherche saisie par l'utilisateur\n  const [query, setQuery] = useState(\"\");\n  // État pour stocker la liste des suggestions récupérées depuis l'API\n  const [suggestions, setSuggestions] = useState([]);\n  // État pour contrôler l'affichage du menu déroulant\n  const [showDropdown, setShowDropdown] = useState(false);\n  // Référence pour gérer le délai (debounce) entre les saisies\n  const typingTimeoutRef = useRef(null);\n  // Hook pour naviguer entre les pages\n  const navigate = useNavigate();\n  // Référence du conteneur de la search bar (utile pour détecter les clics extérieurs)\n  const searchBarRef = useRef(null);\n\n  // Effet déclenché à chaque modification de la chaîne de recherche\n  useEffect(() => {\n    if (query.length >= 3) {\n      if (typingTimeoutRef.current) clearTimeout(typingTimeoutRef.current);\n      typingTimeoutRef.current = setTimeout(async () => {\n        try {\n          console.log(\"Requête envoyée avec :\", query);\n          // Appel à l'API pour récupérer les produits correspondant au mot-clé\n          const response = await axios.get(`http://localhost:8080/product/search?keyword=${query}`);\n          console.log(\"Réponse reçue :\", response.data);\n\n          // Si l'API renvoie des données, mettre à jour les suggestions et afficher le menu déroulant\n          if (response.data && response.data.length > 0) {\n            setSuggestions(response.data);\n            setShowDropdown(true);\n          } else {\n            // Sinon, vider les suggestions et masquer le menu\n            setSuggestions([]);\n            setShowDropdown(false);\n          }\n        } catch (error) {\n          // En cas d'erreur, afficher l'erreur et réinitialiser les suggestions et l'affichage\n          console.error(\"Erreur lors de la récupération des produits :\", error);\n          setSuggestions([]);\n          setShowDropdown(false);\n        }\n      }, 300);\n    } else {\n      // Si la requête fait moins de 3 caractères, vider les suggestions et masquer le menu déroulant\n      setSuggestions([]);\n      setShowDropdown(false);\n    }\n  }, [query]);\n\n  // Fonction appelée lors du clic sur un produit dans le menu déroulant\n  const handleProductClick = id => {\n    // Masquer le menu déroulant\n    setShowDropdown(false);\n    // Rediriger vers la page de détails du produit après un délai de 100 ms\n    setTimeout(() => navigate(`/product-details/${id}`), 100);\n  };\n  return (\n    /*#__PURE__*/\n    // Conteneur principal de la search bar avec une classe raccourcie\n    _jsxDEV(\"div\", {\n      className: \"searchbar-wrap\",\n      ref: searchBarRef,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        variant: \"outlined\",\n        placeholder: \"Rechercher une plante...\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)\n        },\n        sx: {\n          width: 250,\n          \"& .MuiOutlinedInput-root\": {\n            color: \"white\",\n            backgroundColor: \"#386641\",\n            transition: \"background-color 0.3s ease\",\n            \"&:hover\": {\n              backgroundColor: \"#58813e\"\n            },\n            \"&.Mui-focused\": {\n              backgroundColor: \"#58813e\"\n            },\n            \"& fieldset\": {\n              borderColor: \"rgba(255,255,255,0.5)\"\n            },\n            \"&:hover fieldset\": {\n              borderColor: \"rgba(255,255,255,0.7)\"\n            },\n            \"&.Mui-focused fieldset\": {\n              borderColor: \"white\"\n            }\n          },\n          \"& .MuiInputAdornment-root .MuiIconButton-root\": {\n            color: \"white\"\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), showDropdown && suggestions.length > 0 && /*#__PURE__*/ReactDOM.createPortal(/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"fixed\",\n          top: \"65px\",\n          right: \"370px\",\n          zIndex: 1000\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"searchbar-wrap-drop\",\n          style: {\n            width: '600px',\n            overflowY: \"auto\",\n            borderRadius: \"8px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(List, {\n            children: suggestions.map(product => /*#__PURE__*/_jsxDEV(ListItem, {\n              onClick: () => handleProductClick(product.id),\n              component: \"li\",\n              style: {\n                cursor: \"pointer\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  src: product.image,\n                  alt: product.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: product.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 37\n              }, this)]\n            }, product.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), document.body)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(SearchBar, \"D2GAmXumPPyEYbZ4JAmACI2N3mw=\", false, function () {\n  return [useNavigate];\n});\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ReactDOM","axios","useNavigate","TextField","SearchIcon","List","ListItem","ListItemAvatar","Avatar","ListItemText","Paper","IconButton","InputAdornment","jsxDEV","_jsxDEV","SearchBar","_s","query","setQuery","suggestions","setSuggestions","showDropdown","setShowDropdown","typingTimeoutRef","navigate","searchBarRef","length","current","clearTimeout","setTimeout","console","log","response","get","data","error","handleProductClick","id","className","ref","children","fullWidth","variant","placeholder","value","onChange","e","target","InputProps","startAdornment","position","fileName","_jsxFileName","lineNumber","columnNumber","sx","width","color","backgroundColor","transition","borderColor","createPortal","style","top","right","zIndex","overflowY","borderRadius","map","product","onClick","component","cursor","src","image","alt","name","primary","document","body","_c","$RefreshReg$"],"sources":["/home/greta/Documents/www/PlantCare/front/src/components/header/SearchBar.tsx"],"sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport {useNavigate} from \"react-router-dom\";\nimport TextField from \"@mui/material/TextField\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Paper from \"@mui/material/Paper\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\n\ninterface Product {\n    id: number;\n    name: string;\n    image: string;\n}\n\nconst SearchBar: React.FC = () => {\n    // État pour stocker la chaîne de recherche saisie par l'utilisateur\n    const [query, setQuery] = useState(\"\");\n    // État pour stocker la liste des suggestions récupérées depuis l'API\n    const [suggestions, setSuggestions] = useState<Product[]>([]);\n    // État pour contrôler l'affichage du menu déroulant\n    const [showDropdown, setShowDropdown] = useState(false);\n    // Référence pour gérer le délai (debounce) entre les saisies\n    const typingTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n    // Hook pour naviguer entre les pages\n    const navigate = useNavigate();\n    // Référence du conteneur de la search bar (utile pour détecter les clics extérieurs)\n    const searchBarRef = useRef<HTMLDivElement | null>(null);\n\n    // Effet déclenché à chaque modification de la chaîne de recherche\n    useEffect(() => {\n        if (query.length >= 3) {\n            if (typingTimeoutRef.current) clearTimeout(typingTimeoutRef.current);\n            typingTimeoutRef.current = setTimeout(async () => {\n                try {\n                    console.log(\"Requête envoyée avec :\", query);\n                    // Appel à l'API pour récupérer les produits correspondant au mot-clé\n                    const response = await axios.get(`http://localhost:8080/product/search?keyword=${query}`);\n                    console.log(\"Réponse reçue :\", response.data);\n\n                    // Si l'API renvoie des données, mettre à jour les suggestions et afficher le menu déroulant\n                    if (response.data && response.data.length > 0) {\n                        setSuggestions(response.data);\n                        setShowDropdown(true);\n                    } else {\n                        // Sinon, vider les suggestions et masquer le menu\n                        setSuggestions([]);\n                        setShowDropdown(false);\n                    }\n                } catch (error) {\n                    // En cas d'erreur, afficher l'erreur et réinitialiser les suggestions et l'affichage\n                    console.error(\"Erreur lors de la récupération des produits :\", error);\n                    setSuggestions([]);\n                    setShowDropdown(false);\n                }\n            }, 300);\n        } else {\n            // Si la requête fait moins de 3 caractères, vider les suggestions et masquer le menu déroulant\n            setSuggestions([]);\n            setShowDropdown(false);\n        }\n    }, [query]);\n\n    // Fonction appelée lors du clic sur un produit dans le menu déroulant\n    const handleProductClick = (id: number) => {\n        // Masquer le menu déroulant\n        setShowDropdown(false);\n        // Rediriger vers la page de détails du produit après un délai de 100 ms\n        setTimeout(() => navigate(`/product-details/${id}`), 100);\n    };\n\n    return (\n        // Conteneur principal de la search bar avec une classe raccourcie\n        <div className=\"searchbar-wrap\" ref={searchBarRef}>\n            {/* Champ de saisie pour la recherche */}\n            <TextField\n                fullWidth\n                variant=\"outlined\"\n                placeholder=\"Rechercher une plante...\"\n                value={query}\n                onChange={(e) => setQuery(e.target.value)}\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                            <IconButton>\n                                <SearchIcon/>\n                            </IconButton>\n                        </InputAdornment>\n                    ),\n                }}\n                sx={{\n                    width: 250,\n                    \"& .MuiOutlinedInput-root\": {\n                        color: \"white\",\n                        backgroundColor: \"#386641\",\n                        transition: \"background-color 0.3s ease\",\n                        \"&:hover\": {\n                            backgroundColor: \"#58813e\"\n                        },\n                        \"&.Mui-focused\": {\n                            backgroundColor: \"#58813e\"\n                        },\n                        \"& fieldset\": {\n                            borderColor: \"rgba(255,255,255,0.5)\"\n                        },\n                        \"&:hover fieldset\": {\n                            borderColor: \"rgba(255,255,255,0.7)\"\n                        },\n                        \"&.Mui-focused fieldset\": {\n                            borderColor: \"white\"\n                        }\n                    },\n                    \"& .MuiInputAdornment-root .MuiIconButton-root\": {\n                        color: \"white\"\n                    }\n                }}\n            />\n            {/* Affichage du menu déroulant avec les suggestions */}\n            {showDropdown && suggestions.length > 0 && ReactDOM.createPortal(\n                <div style={{position: \"fixed\", top: \"65px\", right: \"370px\", zIndex: 1000}}>\n                    <Paper\n                        className=\"searchbar-wrap-drop\"\n                        style={{width: '600px', overflowY: \"auto\", borderRadius: \"8px\"}}\n                    >\n                        <List>\n                            {/* Parcours des suggestions pour afficher chaque produit */}\n                            {suggestions.map((product) => (\n                                <ListItem\n                                    key={product.id}\n                                    onClick={() => handleProductClick(product.id)}\n                                    component=\"li\"\n                                    style={{cursor: \"pointer\"}}\n                                >\n                                    <ListItemAvatar>\n                                        <Avatar src={product.image} alt={product.name}/>\n                                    </ListItemAvatar>\n                                    <ListItemText primary={product.name}/>\n                                </ListItem>\n                            ))}\n                        </List>\n                    </Paper>\n                </div>,\n                document.body\n            )}\n        </div>\n    );\n};\n\nexport default SearchBar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}